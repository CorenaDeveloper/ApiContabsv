// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace ApiContabsv.Models.Seguridad;

public partial class SeguridadContext : DbContext
{
    public SeguridadContext(DbContextOptions<SeguridadContext> options)
        : base(options)
    {
    }

    public virtual DbSet<App> Apps { get; set; }

    public virtual DbSet<ErrorLog> ErrorLogs { get; set; }

    public virtual DbSet<Modulo> Modulos { get; set; }

    public virtual DbSet<PermisosxRol> PermisosxRols { get; set; }

    public virtual DbSet<Rol> Rols { get; set; }

    public virtual DbSet<Usuario> Usuarios { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<App>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Apps__3213E83F3C3126F8");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Detalle)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("detalle");
            entity.Property(e => e.Estado).HasColumnName("estado");
            entity.Property(e => e.FechaCreado)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fecha_Creado");
            entity.Property(e => e.Img)
                .IsUnicode(false)
                .HasColumnName("img");
            entity.Property(e => e.Nombre)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nombre");
            entity.Property(e => e.Url)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("url");
            entity.Property(e => e.VersionCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("version_Code");
        });

        modelBuilder.Entity<ErrorLog>(entity =>
        {
            entity.HasKey(e => e.ErrorId).HasName("PK__ErrorLog__358565CAFEB7E67A");

            entity.ToTable("ErrorLog");

            entity.Property(e => e.ErrorId).HasColumnName("ErrorID");
            entity.Property(e => e.ApplicationName)
                .IsRequired()
                .HasMaxLength(255)
                .HasDefaultValueSql("(app_name())");
            entity.Property(e => e.ErrorDateTime)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.ErrorMessage).IsRequired();
            entity.Property(e => e.ErrorProcedure).HasMaxLength(255);
            entity.Property(e => e.HostName)
                .IsRequired()
                .HasMaxLength(255)
                .HasDefaultValueSql("(host_name())");
            entity.Property(e => e.UserName)
                .IsRequired()
                .HasMaxLength(255)
                .HasDefaultValueSql("(suser_sname())");
        });

        modelBuilder.Entity<Modulo>(entity =>
        {
            entity.HasKey(e => e.IdModulo).HasName("PK__Modulos__3CE613FA1D3002C0");

            entity.Property(e => e.IdModulo).HasColumnName("idModulo");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.Descripcion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("descripcion");
            entity.Property(e => e.IdApps).HasColumnName("idApps");

            entity.HasOne(d => d.IdAppsNavigation).WithMany(p => p.Modulos)
                .HasForeignKey(d => d.IdApps)
                .HasConstraintName("FK_Modulos_Apps");
        });

        modelBuilder.Entity<PermisosxRol>(entity =>
        {
            entity.HasKey(e => e.IdPermiso).HasName("PK_PermisosxUsuario");

            entity.ToTable("PermisosxRol");

            entity.Property(e => e.IdPermiso).HasColumnName("idPermiso");
            entity.Property(e => e.Estado).HasColumnName("estado");
            entity.Property(e => e.IdModulo).HasColumnName("idModulo");
            entity.Property(e => e.IdRol).HasColumnName("idRol");

            entity.HasOne(d => d.IdModuloNavigation).WithMany(p => p.PermisosxRols)
                .HasForeignKey(d => d.IdModulo)
                .HasConstraintName("FK_PermisosxRol_Modulos");

            entity.HasOne(d => d.IdRolNavigation).WithMany(p => p.PermisosxRols)
                .HasForeignKey(d => d.IdRol)
                .HasConstraintName("FK_PermisosxRol_Rol");
        });

        modelBuilder.Entity<Rol>(entity =>
        {
            entity.ToTable("Rol");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.AppId).HasColumnName("app_id");
            entity.Property(e => e.Estado).HasColumnName("estado");
            entity.Property(e => e.FechaCreado)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fecha_creado");
            entity.Property(e => e.Nombre)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nombre");

            entity.HasOne(d => d.App).WithMany(p => p.Rols)
                .HasForeignKey(d => d.AppId)
                .HasConstraintName("FK_Rol_Apps1");
        });

        modelBuilder.Entity<Usuario>(entity =>
        {
            entity.HasKey(e => e.IdUsuario).HasName("PK__Usuarios__5B65BF9730112697");

            entity.HasIndex(e => e.Email, "UQ__Usuarios__A9D105348D4E09D8").IsUnique();

            entity.HasIndex(e => e.Usuario1, "UQ__Usuarios__E3237CF7200D1610").IsUnique();

            entity.Property(e => e.Apellido)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.Contraseña)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.Email)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.Estado).HasDefaultValue(true);
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdRol).HasColumnName("idRol");
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.Usuario1)
                .IsRequired()
                .HasMaxLength(50)
                .HasColumnName("Usuario");

            entity.HasOne(d => d.IdRolNavigation).WithMany(p => p.Usuarios)
                .HasForeignKey(d => d.IdRol)
                .HasConstraintName("FK_Usuarios_Rol");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}