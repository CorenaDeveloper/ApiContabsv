// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace ApiContabsv.Models.Contabilidad;

public partial class ContabilidadContext : DbContext
{
    public ContabilidadContext(DbContextOptions<ContabilidadContext> options)
        : base(options)
    {
    }

    public virtual DbSet<ClaseDocumento> ClaseDocumentos { get; set; }

    public virtual DbSet<Clasificacion> Clasificacions { get; set; }

    public virtual DbSet<ClientexClt> ClientexClts { get; set; }

    public virtual DbSet<Compra> Compras { get; set; }

    public virtual DbSet<Operacione> Operaciones { get; set; }

    public virtual DbSet<Proveedore> Proveedores { get; set; }

    public virtual DbSet<Sector> Sectors { get; set; }

    public virtual DbSet<TipoDocumento> TipoDocumentos { get; set; }

    public virtual DbSet<TipoOperacionCg> TipoOperacionCgs { get; set; }

    public virtual DbSet<VentaConsumidor> VentaConsumidors { get; set; }

    public virtual DbSet<VentaContribuyente> VentaContribuyentes { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<ClaseDocumento>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ClaseDoc__3213E83F70893AD0");

            entity.ToTable("ClaseDocumento");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Codigo)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("codigo");
            entity.Property(e => e.Nombre)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("nombre");
        });

        modelBuilder.Entity<Clasificacion>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Clasific__3213E83FAFD53FAB");

            entity.ToTable("Clasificacion");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Codigo)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("codigo");
            entity.Property(e => e.Descripcion)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("descripcion");
            entity.Property(e => e.SectorP)
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("sectorP");
        });

        modelBuilder.Entity<ClientexClt>(entity =>
        {
            entity.HasKey(e => e.IdClienteClt).HasName("PK__clientex__4C28074A36BDF2C9");

            entity.ToTable("clientexClt");

            entity.Property(e => e.IdClienteClt).HasColumnName("idClienteClt");
            entity.Property(e => e.Apellidos)
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("apellidos");
            entity.Property(e => e.Celular)
                .HasMaxLength(13)
                .HasColumnName("celular");
            entity.Property(e => e.DuiCliente)
                .HasMaxLength(10)
                .HasColumnName("duiCliente");
            entity.Property(e => e.DuiRepresentanteLegal)
                .HasMaxLength(10)
                .HasColumnName("duiRepresentanteLegal");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.NitCliente)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("nitCliente");
            entity.Property(e => e.NombreComercial)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nombreComercial");
            entity.Property(e => e.NombreRazonSocial)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nombreRazonSocial");
            entity.Property(e => e.Nombres)
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("nombres");
            entity.Property(e => e.Nrc)
                .HasMaxLength(25)
                .IsUnicode(false)
                .HasColumnName("nrc");
            entity.Property(e => e.PersonaJuridica).HasColumnName("personaJuridica");
            entity.Property(e => e.RepresentanteLegal)
                .HasMaxLength(120)
                .HasColumnName("representanteLegal");
            entity.Property(e => e.TelefonoCliente)
                .HasMaxLength(13)
                .HasColumnName("telefonoCliente");
            entity.Property(e => e.TipoContribuyente)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("tipoContribuyente");
        });

        modelBuilder.Entity<Compra>(entity =>
        {
            entity.HasKey(e => e.IdDocCompra).HasName("PK__Compras__BE7B5DF8B77F01DC");

            entity.Property(e => e.IdDocCompra).HasColumnName("idDocCompra");
            entity.Property(e => e.Anulado).HasColumnName("anulado");
            entity.Property(e => e.Combustible).HasColumnName("combustible");
            entity.Property(e => e.CreditoFiscal)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("creditoFiscal");
            entity.Property(e => e.Eliminado).HasColumnName("eliminado");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaEmision).HasColumnName("fechaEmision");
            entity.Property(e => e.FechaPresentacion).HasColumnName("fechaPresentacion");
            entity.Property(e => e.IdClasificacion).HasColumnName("idClasificacion");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdProveedor).HasColumnName("idProveedor");
            entity.Property(e => e.IdSector).HasColumnName("idSector");
            entity.Property(e => e.IdTipoCostoGasto).HasColumnName("idTipoCostoGasto");
            entity.Property(e => e.IdTipoOperacion).HasColumnName("idTipoOperacion");
            entity.Property(e => e.IdclaseDocumento).HasColumnName("idclaseDocumento");
            entity.Property(e => e.IdtipoDocumento).HasColumnName("idtipoDocumento");
            entity.Property(e => e.ImportacionesGravadasBienes)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("importacionesGravadasBienes");
            entity.Property(e => e.ImportacionesGravadasServicios)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("importacionesGravadasServicios");
            entity.Property(e => e.ImportacionesYONsujetas)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("importacionesY_O_NSujetas");
            entity.Property(e => e.InternacionalesExentasYONsujetas)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("internacionalesExentasY_O_NSujetas");
            entity.Property(e => e.InternacionesGravadasBienes)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("internacionesGravadasBienes");
            entity.Property(e => e.InternasExentas)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("internasExentas");
            entity.Property(e => e.InternasGravadas)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("internasGravadas");
            entity.Property(e => e.IvaRetenido)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("ivaRetenido");
            entity.Property(e => e.NumSerie)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("numSerie");
            entity.Property(e => e.NumeroAnexo)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("numeroAnexo");
            entity.Property(e => e.NumeroDocumento)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("numeroDocumento");
            entity.Property(e => e.Posteado).HasColumnName("posteado");
            entity.Property(e => e.TotalCompras)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("totalCompras");

            entity.HasOne(d => d.IdClasificacionNavigation).WithMany(p => p.Compras)
                .HasForeignKey(d => d.IdClasificacion)
                .HasConstraintName("FK_Compras_Clasificacion");

            entity.HasOne(d => d.IdProveedorNavigation).WithMany(p => p.Compras)
                .HasForeignKey(d => d.IdProveedor)
                .HasConstraintName("FK_Compras_Proveedores");

            entity.HasOne(d => d.IdSectorNavigation).WithMany(p => p.Compras)
                .HasForeignKey(d => d.IdSector)
                .HasConstraintName("FK_Compras_Sector");

            entity.HasOne(d => d.IdTipoCostoGastoNavigation).WithMany(p => p.Compras)
                .HasForeignKey(d => d.IdTipoCostoGasto)
                .HasConstraintName("FK_Compras_TipoOperacionCG");

            entity.HasOne(d => d.IdTipoOperacionNavigation).WithMany(p => p.Compras)
                .HasForeignKey(d => d.IdTipoOperacion)
                .HasConstraintName("FK_Compras_Operaciones");

            entity.HasOne(d => d.IdclaseDocumentoNavigation).WithMany(p => p.Compras)
                .HasForeignKey(d => d.IdclaseDocumento)
                .HasConstraintName("FK_Compras_ClaseDocumento");

            entity.HasOne(d => d.IdtipoDocumentoNavigation).WithMany(p => p.Compras)
                .HasForeignKey(d => d.IdtipoDocumento)
                .HasConstraintName("FK_Compras_TipoDocumento");
        });

        modelBuilder.Entity<Operacione>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Operacio__3213E83FDE8C1F03");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Codigo)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("codigo");
            entity.Property(e => e.Descripcion)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("descripcion");
            entity.Property(e => e.SectorP)
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("sectorP");
        });

        modelBuilder.Entity<Proveedore>(entity =>
        {
            entity.HasKey(e => e.IdProveedor).HasName("PK__Proveedo__A3FA8E6BB04569A9");

            entity.Property(e => e.IdProveedor).HasColumnName("idProveedor");
            entity.Property(e => e.Apellidos)
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("apellidos");
            entity.Property(e => e.Celular)
                .HasMaxLength(13)
                .HasColumnName("celular");
            entity.Property(e => e.Creado)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("creado");
            entity.Property(e => e.Direccion)
                .IsUnicode(false)
                .HasColumnName("direccion");
            entity.Property(e => e.DuiCliente)
                .HasMaxLength(10)
                .HasColumnName("duiCliente");
            entity.Property(e => e.DuiRepresentanteLegal)
                .HasMaxLength(10)
                .HasColumnName("duiRepresentanteLegal");
            entity.Property(e => e.Email)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("email");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdSector).HasColumnName("idSector");
            entity.Property(e => e.NitProveedor)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("nitProveedor");
            entity.Property(e => e.NombreComercial)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nombreComercial");
            entity.Property(e => e.NombreRazonSocial)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nombreRazonSocial");
            entity.Property(e => e.Nombres)
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("nombres");
            entity.Property(e => e.Nrc)
                .HasMaxLength(25)
                .IsUnicode(false)
                .HasColumnName("nrc");
            entity.Property(e => e.PersonaJuridica).HasColumnName("personaJuridica");
            entity.Property(e => e.RepresentanteLegal)
                .HasMaxLength(120)
                .HasColumnName("representanteLegal");
            entity.Property(e => e.TelefonoCliente)
                .HasMaxLength(13)
                .HasColumnName("telefonoCliente");
            entity.Property(e => e.TipoContribuyente)
                .HasMaxLength(60)
                .IsUnicode(false);

            entity.HasOne(d => d.IdSectorNavigation).WithMany(p => p.Proveedores)
                .HasForeignKey(d => d.IdSector)
                .HasConstraintName("FK_Proveedores_Sector");
        });

        modelBuilder.Entity<Sector>(entity =>
        {
            entity.HasKey(e => e.IdSector).HasName("PK__Sector__5D8E1E74B7735F48");

            entity.ToTable("Sector");

            entity.Property(e => e.IdSector).HasColumnName("idSector");
            entity.Property(e => e.CodigoSector)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("codigoSector");
            entity.Property(e => e.Detalle)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("detalle");
        });

        modelBuilder.Entity<TipoDocumento>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__TipoDocu__3213E83F7912DCFA");

            entity.ToTable("TipoDocumento");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Codigo)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("codigo");
            entity.Property(e => e.Nombre)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("nombre");
            entity.Property(e => e.SectorP)
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("sectorP");
        });

        modelBuilder.Entity<TipoOperacionCg>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__TipoOper__3213E83F56D25904");

            entity.ToTable("TipoOperacionCG");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Codigo)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("codigo");
            entity.Property(e => e.Descripcion)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("descripcion");
            entity.Property(e => e.SectorP)
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("sectorP");
        });

        modelBuilder.Entity<VentaConsumidor>(entity =>
        {
            entity.HasKey(e => e.IdVentaConsumidor).HasName("PK__VentaCon__1A5A7335952BEC5A");

            entity.ToTable("VentaConsumidor");

            entity.Property(e => e.IdVentaConsumidor).HasColumnName("idVentaConsumidor");
            entity.Property(e => e.Anulado).HasDefaultValue(false);
            entity.Property(e => e.Eliminado).HasDefaultValue(false);
            entity.Property(e => e.ExportacionesCentroamerica).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.ExportacionesFueraCentroamerica).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.ExportacionesServicio).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.IdClaseDocumento).HasColumnName("idClaseDocumento");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdClienteCit).HasColumnName("idClienteCIt");
            entity.Property(e => e.IdOperacion).HasColumnName("idOperacion");
            entity.Property(e => e.IdTipoDocumento).HasColumnName("idTipoDocumento");
            entity.Property(e => e.IdTipoOperacionCg).HasColumnName("idTipoOperacionCG");
            entity.Property(e => e.NumeroControlInterno)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("numeroControlInterno");
            entity.Property(e => e.NumeroMaquinaRegistradora)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.NumeroResolucion)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Posteado).HasDefaultValue(false);
            entity.Property(e => e.SerieDocumento)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.TotalVentas).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.VentasExentas).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.VentasGravadasLocales).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.VentasInternasExentasNoProporcionalidad).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.VentasNoSujetas).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.VentasTercerosNoDomiciliados).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.VentasZonasFrancasDpa)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("VentasZonasFrancasDPA");

            entity.HasOne(d => d.IdClaseDocumentoNavigation).WithMany(p => p.VentaConsumidors)
                .HasForeignKey(d => d.IdClaseDocumento)
                .HasConstraintName("FK_VentaConsumidor_ClaseDocumento");

            entity.HasOne(d => d.IdClienteCitNavigation).WithMany(p => p.VentaConsumidors)
                .HasForeignKey(d => d.IdClienteCit)
                .HasConstraintName("FK_VentaConsumidor_clientexClt");

            entity.HasOne(d => d.IdOperacionNavigation).WithMany(p => p.VentaConsumidors)
                .HasForeignKey(d => d.IdOperacion)
                .HasConstraintName("FK_VentaConsumidor_Operaciones");

            entity.HasOne(d => d.IdTipoDocumentoNavigation).WithMany(p => p.VentaConsumidors)
                .HasForeignKey(d => d.IdTipoDocumento)
                .HasConstraintName("FK_VentaConsumidor_TipoDocumento");

            entity.HasOne(d => d.IdTipoOperacionCgNavigation).WithMany(p => p.VentaConsumidors)
                .HasForeignKey(d => d.IdTipoOperacionCg)
                .HasConstraintName("FK_VentaConsumidor_TipoOperacionCG");
        });

        modelBuilder.Entity<VentaContribuyente>(entity =>
        {
            entity.HasKey(e => e.IdVentaContribuyentes).HasName("PK__VentaCon__470DBE82C9B2558E");

            entity.Property(e => e.IdVentaContribuyentes).HasColumnName("idVentaContribuyentes");
            entity.Property(e => e.DebitoFiscal).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.DebitoFiscalVentasTerceros).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.IdClaseDocumento).HasColumnName("idClaseDocumento");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
            entity.Property(e => e.IdClienteCit).HasColumnName("idClienteCit");
            entity.Property(e => e.IdOperacion).HasColumnName("idOperacion");
            entity.Property(e => e.IdTipoDocumento).HasColumnName("idTipoDocumento");
            entity.Property(e => e.IdTipoOperacionCg).HasColumnName("idTipoOperacionCG");
            entity.Property(e => e.NumeroControlInterno)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.NumeroDocumento)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.NumeroResolucion)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.SerieDocumento)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.TotalVentas).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.VentasExentas).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.VentasGravadasLocales).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.VentasNoSujetas).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.VentasTercerosNoDomiciliados).HasColumnType("decimal(18, 2)");

            entity.HasOne(d => d.IdClaseDocumentoNavigation).WithMany(p => p.VentaContribuyentes)
                .HasForeignKey(d => d.IdClaseDocumento)
                .HasConstraintName("FK_VentaContribuyentes_ClaseDocumento");

            entity.HasOne(d => d.IdClienteCitNavigation).WithMany(p => p.VentaContribuyentes)
                .HasForeignKey(d => d.IdClienteCit)
                .HasConstraintName("FK_VentaContribuyentes_clientexClt");

            entity.HasOne(d => d.IdOperacionNavigation).WithMany(p => p.VentaContribuyentes)
                .HasForeignKey(d => d.IdOperacion)
                .HasConstraintName("FK_VentaContribuyentes_Operaciones");

            entity.HasOne(d => d.IdTipoDocumentoNavigation).WithMany(p => p.VentaContribuyentes)
                .HasForeignKey(d => d.IdTipoDocumento)
                .HasConstraintName("FK_VentaContribuyentes_TipoDocumento");

            entity.HasOne(d => d.IdTipoOperacionCgNavigation).WithMany(p => p.VentaContribuyentes)
                .HasForeignKey(d => d.IdTipoOperacionCg)
                .HasConstraintName("FK_VentaContribuyentes_TipoOperacionCG");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}